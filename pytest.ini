# backend/pytest.ini
# Pytest Konfiguration f√ºr Keiko Backend Tests

[tool:pytest]
# Test Discovery
testpaths = tests
python_paths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async Support
asyncio_mode = auto

# Output Configuration
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --cov=.
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=85
    --disable-warnings

# Markers
markers =
    asyncio: marks tests as async tests (handled by pytest-asyncio)
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    contract: marks tests as contract tests
    agents: marks tests as agents tests
    common: marks tests as common tests
    azure: marks tests requiring Azure AI Foundry credentials
    execution: marks tests as execution tests
    observability: marks tests related to observability features
    monitoring: marks tests related to monitoring features
    perf: marks performance tests
    performance: marks performance tests for latency and throughput
    system: marks system-level tests
    reliability: marks fault-tolerance and recovery tests
    voice: marks voice-system specific tests
    mcp: marks MCP client and server tests
    error_recovery: marks error-handling and recovery tests
    enterprise: marks enterprise-grade requirements tests
    security: marks security-related tests
    audit: marks audit-logging tests
    e2e: marks end-to-end tests
    conformance: marks protocol conformance tests
    sdk: marks SDK client tests
    stress: marks stress testing scenarios
    schema: marks schema-validation tests
    circuit_breaker: marks circuit breaker tests
    rate_limit: marks rate limiting tests
    foundry: marks tests for Azure AI Foundry integration
    resilience: marks tests for resilience components
    registry: marks tests for registry and discovery components
    slo_sla: marks tests for SLO/SLA management components

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:azure.*
    ignore::UserWarning:openai.*

# Minimum Python Version
minversion = 3.11

# Test Timeout (in seconds)
timeout = 300

# Parallel Execution
# Uncomment to enable parallel test execution
# addopts = -n auto
