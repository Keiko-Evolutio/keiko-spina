# backend/pytest.ini
# Pytest Konfiguration f√ºr KEI-Agent Tests

[tool:pytest]
# Test Discovery
testpaths = .
python_paths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async Support
asyncio_mode = auto

# Output Configuration
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=85

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    azure: marks tests requiring Azure AI Foundry credentials
    performance: marks tests as performance tests
    unit: marks tests as unit tests
    resilience: marks tests for resilience components
    monitoring: marks tests for monitoring components
    foundry: marks tests for Azure AI Foundry integration
    security: marks tests for security components
    registry: marks tests for registry and discovery components
    slo_sla: marks tests for SLO/SLA management components

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:azure.*
    ignore::UserWarning:openai.*

# Minimum Python Version
minversion = 3.11

# Test Timeout (in seconds)
timeout = 300

# Parallel Execution
# Uncomment to enable parallel test execution
# addopts = -n auto

# Coverage Configuration
[coverage:run]
source = kei_agents
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
