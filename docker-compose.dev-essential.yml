# docker-compose.dev-essential.yml
# Nur die essentiellen Services für die Entwicklung
# PostgreSQL, Redis, NATS - das Minimum für Backend-Entwicklung

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: keiko-postgres
    environment:
      POSTGRES_DB: keiko_dev
      POSTGRES_USER: keiko_user
      POSTGRES_PASSWORD: keiko_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - keiko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keiko_user -d keiko_dev"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: keiko-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - keiko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s

  # NATS Message Broker
  nats:
    image: nats:2.10-alpine
    container_name: keiko-nats
    command: >
      --jetstream
      --store_dir=/data
      --http_port=8222
      --port=4222
    volumes:
      - nats-data:/data
    ports:
      - "4222:4222"   # NATS client connections
      - "8222:8222"   # HTTP monitoring
    networks:
      - keiko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8222/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: keiko-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - keiko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 60s

  # Jaeger - Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: keiko-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - SPAN_STORAGE_TYPE=memory
      - MEMORY_MAX_TRACES=50000
      - QUERY_BASE_PATH=/jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # Jaeger collector HTTP
      - "14250:14250"   # Jaeger collector gRPC
      - "6831:6831/udp" # Jaeger agent UDP
      - "6832:6832/udp" # Jaeger agent UDP
    networks:
      - keiko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # OpenTelemetry Collector - Central telemetry collection
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: keiko-otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
      - ./logs:/logs
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
      - "8888:8888"   # Collector metrics
      - "13133:13133" # Health check endpoint
    environment:
      - GOMEMLIMIT=512MiB
    depends_on:
      - jaeger
      - prometheus
    networks:
      - keiko-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/otelcol-contrib", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  keiko-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  nats-data:
    driver: local
  prometheus-data:
    driver: local
