name: Build and Quality Check
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality-check:
    name: Quality Check & SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          uv sync --all-groups
      
      - name: Run tests and generate coverage report
        run: |
          uv run pytest --junitxml=pytest-junit.xml --cov=. --cov-report=xml --cov-report=term-missing
        continue-on-error: true  # Don't fail build if no tests exist yet
      
      - name: Run Bandit security checks
        run: |
          uv run bandit -r . -f json -o bandit-report.json --exclude ".venv,tests" --skip B101,B601,B602 || echo "Bandit completed with issues"
        continue-on-error: true  # Don't fail build on security issues for now
        timeout-minutes: 5  # Limit Bandit execution time
      
      - name: Run MyPy static type checks
        run: |
          uv run mypy . --junit-xml mypy-report.xml || echo "MyPy issues found"
        continue-on-error: true  # Don't fail build on type issues for now
        timeout-minutes: 3  # Limit MyPy execution time
      
      - name: Run Ruff linting
        run: |
          uv run ruff check . --output-format=json --output-file=ruff-report.json || echo "Ruff issues found"
        continue-on-error: true
        timeout-minutes: 2  # Ruff should be fast
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true  # Don't fail build on quality gate issues
