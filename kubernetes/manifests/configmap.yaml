# kubernetes/manifests/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keiko-config
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: keiko-personal-assistant
    app.kubernetes.io/component: config
data:
  # Application Configuration
  APP_NAME: "keiko-personal-assistant"
  APP_VERSION: "1.0.0"
  APP_ENVIRONMENT: "production"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  LOG_OUTPUT: "stdout"
  
  # Database Configuration
  DATABASE_HOST: "postgresql-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "keiko_db"
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "30"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_POOL_SIZE: "20"
  
  # NATS Configuration
  NATS_HOST: "nats-service"
  NATS_PORT: "4222"
  NATS_CLUSTER_ID: "keiko-cluster"
  
  # Security Configuration
  SECURITY_LEVEL: "INTERNAL"
  ENCRYPTION_ENABLED: "true"
  AUDIT_ENABLED: "true"
  
  # Performance Configuration
  MAX_WORKERS: "10"
  WORKER_TIMEOUT: "300"
  REQUEST_TIMEOUT: "30"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "8080"
  HEALTH_CHECK_PORT: "8081"
  
  # Failure Recovery Configuration
  FAILURE_RECOVERY_ENABLED: "true"
  CIRCUIT_BREAKER_ENABLED: "true"
  RETRY_MAX_ATTEMPTS: "3"
  RETRY_BACKOFF_MULTIPLIER: "2.0"
  
  # Compensation Configuration
  COMPENSATION_ENABLED: "true"
  SAGA_TIMEOUT_MS: "1800000"
  COMPENSATION_TIMEOUT_MS: "300000"
  
  # Analytics Configuration
  ANALYTICS_ENABLED: "true"
  REAL_TIME_ANALYTICS_ENABLED: "true"
  ML_PREDICTIONS_ENABLED: "true"
  TREND_ANALYSIS_ENABLED: "true"
  ANOMALY_DETECTION_ENABLED: "true"
  
  # Observability Configuration
  TRACING_ENABLED: "true"
  TRACING_ENDPOINT: "http://jaeger-collector:14268/api/traces"
  PROMETHEUS_ENABLED: "true"
  PROMETHEUS_ENDPOINT: "http://prometheus:9090"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keiko-nginx-config
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: keiko-personal-assistant
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    upstream keiko_backend {
        least_conn;
        server keiko-api-service:8000 max_fails=3 fail_timeout=30s;
        server keiko-api-service:8000 max_fails=3 fail_timeout=30s;
        server keiko-api-service:8000 max_fails=3 fail_timeout=30s;
    }
    
    upstream keiko_websocket {
        ip_hash;
        server keiko-websocket-service:8001 max_fails=3 fail_timeout=30s;
        server keiko-websocket-service:8001 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security Headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
        
        # API Routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://keiko_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # WebSocket Routes
        location /ws/ {
            limit_req zone=websocket burst=10 nodelay;
            proxy_pass http://keiko_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 300s;
        }
        
        # Health Check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Metrics (Internal Only)
        location /metrics {
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            proxy_pass http://keiko_backend;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keiko-prometheus-config
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: keiko-personal-assistant
    app.kubernetes.io/component: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'keiko-api'
        static_configs:
          - targets: ['keiko-api-service:8080']
        metrics_path: '/metrics'
        scrape_interval: 30s
        scrape_timeout: 10s
        
      - job_name: 'keiko-websocket'
        static_configs:
          - targets: ['keiko-websocket-service:8080']
        metrics_path: '/metrics'
        scrape_interval: 30s
        
      - job_name: 'keiko-worker'
        static_configs:
          - targets: ['keiko-worker-service:8080']
        metrics_path: '/metrics'
        scrape_interval: 30s
        
      - job_name: 'keiko-scheduler'
        static_configs:
          - targets: ['keiko-scheduler-service:8080']
        metrics_path: '/metrics'
        scrape_interval: 30s
        
      - job_name: 'postgresql'
        static_configs:
          - targets: ['postgresql-exporter:9187']
        scrape_interval: 30s
        
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']
        scrape_interval: 30s
        
      - job_name: 'nginx'
        static_configs:
          - targets: ['nginx-exporter:9113']
        scrape_interval: 30s
        
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - keiko-personal-assistant
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
