# kubernetes/manifests/infrastructure-services.yaml
# PostgreSQL Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  serviceName: postgresql-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_DB
          value: "keiko_db"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: keiko-secrets
              key: DATABASE_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keiko-secrets
              key: DATABASE_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    app.kubernetes.io/name: postgresql
---
# Redis Cache
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "1gb"
        - --maxmemory-policy
        - "allkeys-lru"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
---
# NATS Message Broker
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: nats
    app.kubernetes.io/component: messaging
spec:
  serviceName: nats-service
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nats
        app.kubernetes.io/component: messaging
    spec:
      containers:
      - name: nats
        image: nats:2.10-alpine
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        command:
        - nats-server
        - --config
        - /etc/nats-config/nats.conf
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats-config
        - name: nats-data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: monitor
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
      volumes:
      - name: config-volume
        configMap:
          name: nats-config
  volumeClaimTemplates:
  - metadata:
      name: nats-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: nats
    app.kubernetes.io/component: messaging
data:
  nats.conf: |
    port: 4222
    monitor_port: 8222
    
    cluster {
      name: keiko-cluster
      port: 6222
      routes = [
        nats://nats-0.nats-service:6222
        nats://nats-1.nats-service:6222
        nats://nats-2.nats-service:6222
      ]
      cluster_advertise: $CLUSTER_ADVERTISE
      connect_retries: 30
    }
    
    jetstream {
      store_dir: /data/jetstream
      max_memory_store: 256MB
      max_file_store: 2GB
    }
    
    accounts {
      keiko: {
        users: [
          {user: keiko_user, password: $NATS_PASSWORD}
        ]
        jetstream: enabled
      }
    }
    
    system_account: keiko
---
apiVersion: v1
kind: Service
metadata:
  name: nats-service
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: nats
    app.kubernetes.io/component: messaging
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 4222
    targetPort: client
    protocol: TCP
    name: client
  - port: 6222
    targetPort: cluster
    protocol: TCP
    name: cluster
  - port: 8222
    targetPort: monitor
    protocol: TCP
    name: monitor
  selector:
    app.kubernetes.io/name: nats
---
apiVersion: v1
kind: Service
metadata:
  name: nats-client-service
  namespace: keiko-personal-assistant
  labels:
    app.kubernetes.io/name: nats
    app.kubernetes.io/component: messaging
spec:
  type: ClusterIP
  ports:
  - port: 4222
    targetPort: client
    protocol: TCP
    name: client
  selector:
    app.kubernetes.io/name: nats
