# HAProxy Konfiguration für Keiko Personal Assistant
# - Load Balancing (HTTP/WS/SSE)
# - Health Checks
# - Sticky Sessions für WebSockets
# - (Optional) Redis-basiertes Rate Limiting via lua
# - SSL Passthrough oder Terminierung (hier: Terminierung)

global
    log stdout format raw local0
    maxconn 2000
    tune.ssl.default-dh-param 2048

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5s
    timeout client  60s
    timeout server  60s
    timeout http-keep-alive 30s
    option  http-server-close

frontend fe_https
    bind *:443 ssl crt /etc/haproxy/certs/server.pem
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy strict-origin-when-cross-origin
    http-response set-header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self' ws: wss:; frame-ancestors 'none'"

    # WebSocket Erkennung und Weiterleitung
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_websocket hdr_beg(Host) -i ws

    use_backend be_backend if is_websocket
    default_backend be_backend

backend be_backend
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    server keiko1 host.docker.internal:8000 check inter 5s fall 2 rise 3

    # Sticky Sessions für WS
    cookie SRV insert indirect nocache
    server-template srv 1-3 host.docker.internal:8000 check cookie s1
